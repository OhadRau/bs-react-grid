// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_null_undefined = require("bs-platform/lib/js/js_null_undefined.js");
var ReactGridLayout = require("react-grid-layout");

function layout(w, h, x, y, i, minW, maxW, minH, maxH, moved, $$static, isDraggable, isResizable, _) {
  return {
          w: w,
          h: h,
          x: x,
          y: y,
          i: i,
          minW: Js_null_undefined.fromOption(minW),
          maxW: Js_null_undefined.fromOption(maxW),
          minH: Js_null_undefined.fromOption(minH),
          maxH: Js_null_undefined.fromOption(maxH),
          moved: Js_null_undefined.fromOption(moved),
          static: Js_null_undefined.fromOption($$static),
          isDraggable: Js_null_undefined.fromOption(isDraggable),
          isResizable: Js_null_undefined.fromOption(isResizable)
        };
}

function make(cols, containerWidth, margin, containerPadding, rowHeight, maxRows, isDraggable, isResizable, $$static, useCSSTransforms, usePercentages, className, style, cancel, handle, x, y, w, h, minW, maxW, minH, maxH, i, onDrag, onDragStart, onDragStop, onResize, onResizeStart, onResizeStop) {
  var partial_arg = {
    cols: Js_null_undefined.fromOption(cols),
    containerWidth: Js_null_undefined.fromOption(containerWidth),
    margin: Js_null_undefined.fromOption(margin),
    containerPadding: Js_null_undefined.fromOption(containerPadding),
    rowHeight: Js_null_undefined.fromOption(rowHeight),
    maxRows: Js_null_undefined.fromOption(maxRows),
    isDraggable: Js_null_undefined.fromOption(isDraggable),
    isResizable: Js_null_undefined.fromOption(isResizable),
    static: Js_null_undefined.fromOption($$static),
    useCSSTransforms: Js_null_undefined.fromOption(useCSSTransforms),
    usePercentages: Js_null_undefined.fromOption(usePercentages),
    className: Js_null_undefined.fromOption(className),
    style: Js_null_undefined.fromOption(style),
    cancel: Js_null_undefined.fromOption(cancel),
    handle: Js_null_undefined.fromOption(handle),
    x: Js_null_undefined.fromOption(x),
    y: Js_null_undefined.fromOption(y),
    w: Js_null_undefined.fromOption(w),
    h: Js_null_undefined.fromOption(h),
    minW: Js_null_undefined.fromOption(minW),
    maxW: Js_null_undefined.fromOption(maxW),
    minH: Js_null_undefined.fromOption(minH),
    maxH: Js_null_undefined.fromOption(maxH),
    i: Js_null_undefined.fromOption(i),
    onDrag: Js_null_undefined.fromOption(onDrag),
    onDragStart: Js_null_undefined.fromOption(onDragStart),
    onDragStop: Js_null_undefined.fromOption(onDragStop),
    onResize: Js_null_undefined.fromOption(onResize),
    onResizeStart: Js_null_undefined.fromOption(onResizeStart),
    onResizeStop: Js_null_undefined.fromOption(onResizeStop)
  };
  var partial_arg$1 = ReactGridLayout.GridItem;
  return (function (param) {
      return ReasonReact.wrapJsForReason(partial_arg$1, partial_arg, param);
    });
}

var GridItem = /* module */[/* make */make];

var jsMapperConstantArray = /* array */[
  /* tuple */[
    -1010337642,
    "vertical"
  ],
  /* tuple */[
    208994564,
    "horizontal"
  ]
];

function compactTypeToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray);
}

function compactTypeFromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray, param);
}

function make$1(className, style, width, autoSize, cols, draggableCancel, draggableHandle, verticalCompact, compactType, layout, margin, containerPadding, rowHeight, maxRows, isDraggable, isResizable, preventCollision, useCSSTransforms, onLayoutChange, onDrag, onDragStart, onDragStop, onResize, onResizeStart, onResizeStop) {
  var partial_arg = {
    className: Js_null_undefined.fromOption(className),
    style: Js_null_undefined.fromOption(style),
    width: Js_null_undefined.fromOption(width),
    autoSize: Js_null_undefined.fromOption(autoSize),
    cols: Js_null_undefined.fromOption(cols),
    draggableCancel: Js_null_undefined.fromOption(draggableCancel),
    draggableHandle: Js_null_undefined.fromOption(draggableHandle),
    verticalCompact: Js_null_undefined.fromOption(verticalCompact),
    compactType: Js_null_undefined.fromOption(compactType),
    layout: Js_null_undefined.fromOption(layout),
    margin: Js_null_undefined.fromOption(margin),
    containerPadding: Js_null_undefined.fromOption(containerPadding),
    rowHeight: Js_null_undefined.fromOption(rowHeight),
    maxRows: Js_null_undefined.fromOption(maxRows),
    isDraggable: Js_null_undefined.fromOption(isDraggable),
    isResizable: Js_null_undefined.fromOption(isResizable),
    preventCollision: Js_null_undefined.fromOption(preventCollision),
    useCSSTransforms: Js_null_undefined.fromOption(useCSSTransforms),
    onLayoutChange: Js_null_undefined.fromOption(onLayoutChange),
    onDrag: Js_null_undefined.fromOption(onDrag),
    onDragStart: Js_null_undefined.fromOption(onDragStart),
    onDragStop: Js_null_undefined.fromOption(onDragStop),
    onResize: Js_null_undefined.fromOption(onResize),
    onResizeStart: Js_null_undefined.fromOption(onResizeStart),
    onResizeStop: Js_null_undefined.fromOption(onResizeStop)
  };
  var partial_arg$1 = ReactGridLayout;
  return (function (param) {
      return ReasonReact.wrapJsForReason(partial_arg$1, partial_arg, param);
    });
}

var ReactGridLayout$1 = /* module */[
  /* compactTypeToJs */compactTypeToJs,
  /* compactTypeFromJs */compactTypeFromJs,
  /* make */make$1
];

function make$2(breakpoint, breakpoints, cols, layout, width, onBreakpointChange, onLayoutChange, onWidthChange) {
  var partial_arg = {
    breakpoint: Js_null_undefined.fromOption(breakpoint),
    breakpoints: Js_null_undefined.fromOption(breakpoints),
    cols: Js_null_undefined.fromOption(cols),
    layout: Js_null_undefined.fromOption(layout),
    width: width,
    onBreakpointChange: Js_null_undefined.fromOption(onBreakpointChange),
    onLayoutChange: Js_null_undefined.fromOption(onLayoutChange),
    onWidthChange: Js_null_undefined.fromOption(onWidthChange)
  };
  var partial_arg$1 = ReactGridLayout.Responsive;
  return (function (param) {
      return ReasonReact.wrapJsForReason(partial_arg$1, partial_arg, param);
    });
}

var ResponsiveReactGridLayout = /* module */[/* make */make$2];

function make$3(className, measureBeforeMount, style) {
  var partial_arg = {
    className: Js_null_undefined.fromOption(className),
    measureBeforeMount: measureBeforeMount,
    style: Js_null_undefined.fromOption(style)
  };
  var partial_arg$1 = ReactGridLayout.WidthProvider;
  return (function (param) {
      return ReasonReact.wrapJsForReason(partial_arg$1, partial_arg, param);
    });
}

var WidthProvider = /* module */[/* make */make$3];

exports.layout = layout;
exports.GridItem = GridItem;
exports.ReactGridLayout = ReactGridLayout$1;
exports.ResponsiveReactGridLayout = ResponsiveReactGridLayout;
exports.WidthProvider = WidthProvider;
/* ReasonReact Not a pure module */
